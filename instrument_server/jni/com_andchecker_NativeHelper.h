/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_andchecker_NativeHelper */

#ifndef _Included_com_andchecker_NativeHelper
#define _Included_com_andchecker_NativeHelper
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_andchecker_NativeHelper
 * Method:    allocateNativeByteBuffer
 * Signature: (I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_andchecker_NativeHelper_allocateNativeByteBuffer
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_andchecker_NativeHelper
 * Method:    freeNativeByteBuffer
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_com_andchecker_NativeHelper_freeNativeByteBuffer
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_andchecker_NativeHelper
 * Method:    equalNativeByteBuffer
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_andchecker_NativeHelper_equalNativeByteBuffer
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_andchecker_NativeHelper
 * Method:    diffNativeByteBuffers0
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;III)Z
 */
JNIEXPORT jboolean JNICALL Java_com_andchecker_NativeHelper_diffNativeByteBuffers0
  (JNIEnv *, jclass, jobject, jobject, jint, jint, jint);

/*
 * Class:     com_andchecker_NativeHelper
 * Method:    fork
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_andchecker_NativeHelper_fork
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
